<?xml version="1.0" encoding="UTF-8"?>
<executionPlan name="OffsideDetectionExecutionPlan" statistics="disable"
  trace="disable" xmlns="http://wso2.org/carbon/eventprocessor">
  <description>This plan was created for detecting offsides.</description>
  <siddhiConfiguration>
    <property name="siddhi.enable.distributed.processing">false</property>
    <property name="siddhi.persistence.snapshot.time.interval.minutes">0</property>
  </siddhiConfiguration>
  <importedStreams>
    <stream as="sensorStream" name="sensorStream" version="1.0.0"/>
  </importedStreams>
  <queryExpressions><![CDATA[from  sensorStream [ sid == '4' or sid == '8' or sid == '10' or sid =='12'] 
	select sid, ts, x, y, z, a, v, ax, ay, az, vx, vy, vz, tsr, 'ball' as id  
	insert into ballStream;

from  ballStream [ x < 52483 and x > 0 and y > -33960 and y < 33965] 
	insert into ballInStream;

//--IN addPlayerStreams

from  sensorStream [ sid == '13' or sid == '14' or sid == '97' or sid == '98'] 
                    select 'Nick Gertje' as pid, 'A' as tid, ts, x, y, z, v, a, vx, vy, vz, ax, ay, az, sid, tsms  
                    insert into sensorIdentifiedStream;

from  sensorStream [ sid == '47' or sid == '16'] 
                    select 'Dennis Dotterweich' as pid, 'A' as tid, ts, x, y, z, v, a, vx, vy, vz, ax, ay, az, sid, tsms 
                    insert into sensorIdentifiedStream;

from  sensorStream [ sid == '49' or sid == '88'] 
                    select 'Niklas Waelzlein' as pid, 'A' as tid, ts, x, y, z, v, a, vx, vy, vz, ax, ay, az, sid, tsms 
                    insert into sensorIdentifiedStream;

from  sensorStream [ sid == '19' or sid == '52'] 
                    select 'Wili Sommer' as pid, 'A' as tid, ts, x, y, z, v, a, vx, vy, vz, ax, ay, az, sid, tsms 
                    insert into sensorIdentifiedStream;

from  sensorStream [ sid == '53' or sid == '54'] 
                    select 'Philipp Harlass' as pid , 'A' as tid, ts, x, y, z, v, a, vx, vy, vz, ax, ay, az, sid, tsms 
                    insert into sensorIdentifiedStream;

from  sensorStream [ sid == '23' or sid == '24'] 
                    select 'Roman Hartleb' as pid, 'A' as tid, ts, x, y, z, v, a, vx, vy, vz, ax, ay, az, sid, tsms 
                    insert into sensorIdentifiedStream;

from  sensorStream [ sid == '57' or sid == '58'] 
                    select 'Erik Engelhardt' as pid, 'A' as tid, ts, x, y, z, v, a, vx, vy, vz, ax, ay, az, sid, tsms 
                    insert into sensorIdentifiedStream;

from  sensorStream [ sid == '59' or sid == '28'] 
                    select 'Sandro Schneider' as pid ,'A' as tid, ts, x, y, z, v, a, vx, vy, vz, ax, ay, az, sid, tsms 
                    insert into sensorIdentifiedStream;

from  sensorStream [ sid == '61' or sid == '62' or sid == '99' or sid == '100'] 
                    select 'Leon Krapf' as pid,'B' as tid, ts, x, y, z, v, a, vx, vy, vz, ax, ay, az, sid, tsms 
                    insert into sensorIdentifiedStream;

from  sensorStream [ sid == '63' or sid == '64'] 
                    select 'Kevin Baer' as pid,'B' as tid, ts, x, y, z, v, a, vx, vy, vz, ax, ay, az, sid, tsms 
                    insert into sensorIdentifiedStream;

from  sensorStream [ sid == '65' or sid == '66'] 
                    select 'Luca Ziegler' as pid,'B' as tid, ts, x, y, z, v, a, vx, vy, vz, ax, ay, az, sid, tsms 
                    insert into sensorIdentifiedStream;

from  sensorStream [ sid == '67' or sid == '68'] 
                    select 'Ben Mueller' as pid ,'B' as tid, ts, x, y, z, v, a, vx, vy, vz, ax, ay, az, sid, tsms 
                    insert into sensorIdentifiedStream;

from  sensorStream [ sid == '69' or sid == '38'] 
                    select 'Vale Reitstetter' as pid,'B' as tid, ts, x, y, z, v, a, vx, vy, vz, ax, ay, az, sid, tsms 
                    insert into sensorIdentifiedStream;

from  sensorStream [ sid == '71' or sid == '40'] 
                    select 'Christopher Lee' as pid ,'B' as tid, ts, x, y, z, v, a, vx, vy, vz, ax, ay, az, sid, tsms 
                    insert into sensorIdentifiedStream;

from  sensorStream [ sid == '73' or sid == '74'] 
                    select 'Leon Heinze' as pid ,'B' as tid, ts, x, y, z, v, a, vx, vy, vz, ax, ay, az, sid, tsms 
                    insert into sensorIdentifiedStream;

from  sensorStream [ sid == '75' or sid == '44'] 
                    select 'Leo Langhans' as pid ,'B' as tid, ts, x, y, z, v, a, vx, vy, vz, ax, ay, az, sid, tsms 
                    insert into sensorIdentifiedStream;

//--0-position-event

from sensorIdentifiedStream
	select 0 as event_type, pid, y, 0l as ts, 'invalid' as passee
	insert into offsideStream;
	
//--1-hit-event

from  ballInStream#window.length(1) as b join sensorIdentifiedStream#window.length(1)  as p unidirectional 
	on debs:getDistance(b.x,b.y,b.z, p.x, p.y, p.z) < 1000 and b.a > 55 
	select p.sid, p.ts, p.x, p.y, p.z, p.v, p.vx ,p.vy, p.vz, p.a, p.ax, p.ay, p.az, p.pid,p.tid, b.sid as ball_sid  
	insert into hitStream;
	 	
from hitStream
	select 1 as event_type, pid, 0D as y, ts, 'invalid' as passee  
	insert into offsideStream;	
	
//--2-successpass

//--for success passes
from  a1 = hitStream, a = hitStream[a.pid != a1.pid], b = hitStream[a.pid == b.pid]*, c = hitStream[a.tid == c.tid and a.pid != c.pid]
	select a.sid, a.ball_sid, a.ts, a.pid, a.tid, c.pid as passee 
	insert into preSuccessPassesStream;

from preSuccessPassesStream
	select sid, ball_sid, ts, pid, count(pid) as cnt, tid, passee
	group by pid
	insert into successPassesStream;

from successPassesStream
	select 2 as event_type, pid, 0D as y, ts, passee 
	insert into offsideStream;
	
from offsideStream#window.offside()
	select event_type, pid, y, ts, passee
	insert into offsideOutputStream;
	
from offsideOutputStream
	select concat(pid,",",passee) as chart_tuple
	insert into chartOffsideOutputStream;	
]]></queryExpressions>
  <exportedStreams>
    <stream name="offsideOutputStream" valueOf="offsideOutputStream" version="1.0.0"/>
  </exportedStreams>
  <exportedStreams>
    <stream name="chartOffsideOutputStream"
      valueOf="chartOffsideOutputStream" version="1.0.0"/>
  </exportedStreams>
</executionPlan>
